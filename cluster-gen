#!/usr/bin/env ruby

require 'yaml'

# kafka node configs
HOSTNAME_COMMAND="docker info | grep ^Name: | cut -d' ' -f 2"
# persistent location
KAFKA_LOG_DIRS="/kafka-data"
# this will get created when the cluster is up
KAFKA_CREATE_TOPICS="__test1:1:1,app-logs:1:3:compact"
# retention policies
KAFKA_LOG_RETENTION_HOURS=168
KAFKA_LOG_RETENTION_BYTES=1073741824

IMAGE = 'zen12/kafka-cluster'
MANAGER_IMAGE = 'zen12/kafka-manager-docker'
IPStart = 2090
ManPort = 2190
ZKPort = 2181
KM_VERSION = '1.3.3.17'
# default cluster size is 3.
cluster_size = ARGV.empty? ? 3 : ARGV[0].to_i

# get Host IP
if `uname`.strip == 'Darwin'
  HOST_IP = `ipconfig getifaddr en0 || ipconfig getifaddr en1`.strip
else
  interface=`route -n | grep '^0.0.0.0'`.split("\n")[0].split(" ")[-1]
  HOST_IP = `ip -4 addr show scope global dev #{interface} | grep inet`.split(" ")[1][0..-4]
end

puts "Host IP used for Kafka Brokers is #{HOST_IP}"

# making compose file
COMPOSE = {
  'version' => '3',
  'networks' => { 'kafka-net' => { 'driver' => 'overlay' } },
  'volumes' => { 'manager_data' => {} , 'zookeeper_data' => {}},
  'services' => {
    'manager' => {
      'image' => MANAGER_IMAGE,
      'ports' => [ "#{ManPort}:9000" ],
      'networks' => [ 'kafka-net' ],
      'links' => [ "zookeeper" ],
      'environment' => { 
        'KM_VERSION' => KM_VERSION,
        'ZK_HOSTS'=>'zookeeper:2181'
      },
      'volumes' => [ 
        "manager_data:/kafka-manager"
      ]
    },
    'zookeeper' => {
      'image' => IMAGE,
      'command' => 'zookeeper',
      'ports' => [ "#{ZKPort}:2181" ],
      'networks' => [ 'kafka-net' ],
    }
  }
}

def add_broker(id)
  name = "broker_#{id}"
  data_volume = name + "_data"
  port = IPStart + id
  
  COMPOSE['volumes'][data_volume] = {}

  COMPOSE['services'][name] = {
    'hostname' => name,
    'image' => IMAGE,
    'environment' => {
      'KAFKA_BROKER_ID' => id,
      #'KAFKA_ADVERTISED_HOST_NAME' => HOST_IP,
      'HOSTNAME_COMMAND' => HOSTNAME_COMMAND,#get the IP of the HOST COMPUTER from within docker container
      'KAFKA_LOG_DIRS' => KAFKA_LOG_DIRS,
      'KAFKA_CREATE_TOPICS' => KAFKA_CREATE_TOPICS,
      'KAFKA_LOG_RETENTION_HOURS' => KAFKA_LOG_RETENTION_HOURS,
      'KAFKA_LOG_RETENTION_BYTES' => KAFKA_LOG_RETENTION_BYTES,
      'KAFKA_ZOOKEEPER_CONNECT' => "zookeeper:2181",
      'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP'=> "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT",
      'KAFKA_ADVERTISED_LISTENERS'=> "INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094",
      'KAFKA_LISTENERS' => "INSIDE://:9092,OUTSIDE://:9094",
      'KAFKA_INTER_BROKER_LISTENER_NAME' => "INSIDE"
    },
    'volumes' => [ 
      "/var/run/docker.sock:/var/run/docker.sock",
      "#{data_volume}:#{KAFKA_LOG_DIRS}"
    ],
    'ports' => [ "#{port}:9094" ],
    'networks' => [ 'kafka-net' ],
    'links' => [ "zookeeper:zookeeper" ]
  }
end

(1..cluster_size).each do |i|
  add_broker(i)
end

File.write('kafka-compose.yml', COMPOSE.to_yaml)

puts COMPOSE.to_yaml
